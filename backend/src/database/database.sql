--- @date   2024 October 28, 22:27
--- @author Fernando Vazquez

DROP DATABASE IF EXISTS NETFLIX_CLONE;
CREATE DATABASE IF NOT EXISTS NETFLIX_CLONE;

USE NETFLIX_CLONE;

CREATE TABLE IF NOT EXISTS ADMINS (
    ID_ADMIN INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_ADMINS PRIMARY KEY (ID_ADMIN),
    NAME TEXT NULL,
    LASTNAME TEXT NULL,
    EMAIL TEXT NULL,
    HASH_PASSWORD TEXT NULL
);

CREATE TABLE IF NOT EXISTS ACTORS (
    ID_ACTOR INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_ACTORS PRIMARY KEY (ID_ACTOR),
    NAME TEXT NULL
);

CREATE TABLE IF NOT EXISTS DIRECTORS (
    ID_DIRECTOR INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_DIRECTORS PRIMARY KEY (ID_DIRECTOR),
    NAME TEXT NULL
);

CREATE TABLE IF NOT EXISTS CATEGORIES (
    ID_CATEGORY INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_CATEGORIES PRIMARY KEY (ID_CATEGORY),
    NAME TEXT NULL
);

CREATE TABLE IF NOT EXISTS MOVIES (
    ID_MOVIE INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_MOVIES PRIMARY KEY (ID_MOVIE),
    NAME TEXT NULL,
    BACKGROUND_URL TEXT NULL,
    DURATION TEXT NULL,
    YEAR_RELEASED INT(4) NULL,
    DESCRIPTION TEXT NULL,
    VIDEO_URL TEXT NULL
);

CREATE TABLE IF NOT EXISTS MOVIES_has_ACTORS (
    ID_MHA INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_MOVIES_has_ACTORS PRIMARY KEY (ID_MHA),
    ID_MOVIE INT NOT NULL,
    CONSTRAINT FK_MOVIES_has_ACTORS_TO_MOVIES FOREIGN KEY (ID_MOVIE) REFERENCES MOVIES (ID_MOVIE),
    ID_ACTOR INT NOT NULL,
    CONSTRAINT FK_MOVIES_has_ACTORS_TO_ACTORS FOREIGN KEY (ID_ACTOR) REFERENCES ACTORS (ID_ACTOR)
);

CREATE TABLE IF NOT EXISTS MOVIES_has_DIRECTORS (
    ID_MHD INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_MOVIES_has_DIRECTORS PRIMARY KEY (ID_MHD),
    ID_MOVIE INT NOT NULL,
    CONSTRAINT FK_MOVIES_has_DIRECTORS_TO_MOVIES FOREIGN KEY (ID_MOVIE) REFERENCES MOVIES (ID_MOVIE),
    ID_DIRECTOR INT NOT NULL,
    CONSTRAINT FK_MOVIES_has_DIRECTORS_TO_DIRECTORS FOREIGN KEY (ID_DIRECTOR) REFERENCES DIRECTORS (ID_DIRECTOR)
);

CREATE TABLE IF NOT EXISTS MOVIES_has_CATEGORIES (
    ID_MHC INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_MOVIES_has_CATEGORIES PRIMARY KEY (ID_MHC),
    ID_MOVIE INT NOT NULL,
    CONSTRAINT FK_MOVIES_has_CATEGORIES_TO_MOVIES FOREIGN KEY (ID_MOVIE) REFERENCES MOVIES (ID_MOVIE),
    ID_CATEGORY INT NOT NULL,
    CONSTRAINT FK_MOVIES_has_CATEGORIES_TO_CATEGORIES FOREIGN KEY (ID_CATEGORY) REFERENCES CATEGORIES (ID_CATEGORY)
);

CREATE TABLE IF NOT EXISTS SERIES (
    ID_SERIE INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_SERIES PRIMARY KEY (ID_SERIE),
    NAME TEXT NULL,
    NUMBER_OF_SEASONS INT NULL,
    BACKGROUND_URL TEXT NULL,
    YEAR_RELEASED INT(4) NULL,
    DESCRIPTION TEXT NULL
);

CREATE TABLE IF NOT EXISTS SERIES_has_ACTORS (
    ID_SHA INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_SERIES_has_ACTORS PRIMARY KEY (ID_SHA),
    ID_SERIE INT NOT NULL,
    CONSTRAINT FK_SERIES_has_ACTORS_TO_SERIES FOREIGN KEY (ID_SERIE) REFERENCES SERIES (ID_SERIE),
    ID_ACTOR INT NOT NULL,
    CONSTRAINT FK_SERIES_has_ACTORS_TO_ACTORS FOREIGN KEY (ID_ACTOR) REFERENCES ACTORS (ID_ACTOR)
);

CREATE TABLE IF NOT EXISTS SERIES_has_DIRECTORS (
    ID_SHD INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_SERIES_has_DIRECTORS PRIMARY KEY (ID_SHD),
    ID_DIRECTOR INT NOT NULL,
    CONSTRAINT FK_SERIES_HAS_DIRECTORS_TO_DIRECTORS FOREIGN KEY (ID_DIRECTOR) REFERENCES DIRECTORS (ID_DIRECTOR),
    ID_SERIE INT NOT NULL,
    CONSTRAINT FK_SERIES_HAS_DIRECTORS_TO_SERIES FOREIGN KEY (ID_SERIE) REFERENCES SERIES (ID_SERIE)
);

CREATE TABLE IF NOT EXISTS SERIES_has_CATEGORIES (
    ID_SHC INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_SERIES_has_CATEGORIES PRIMARY KEY (ID_SHC),
    ID_SERIE INT NOT NULL,
    CONSTRAINT FK_SERIES_has_CATEGORIES_TO_SERIES FOREIGN KEY (ID_SERIE) REFERENCES SERIES (ID_SERIE),
    ID_CATEGORY INT NOT NULL,
    CONSTRAINT FK_SERIES_has_CATEGORIES_TO_CATEGORIES FOREIGN KEY (ID_CATEGORY) REFERENCES CATEGORIES (ID_CATEGORY)
);

CREATE TABLE IF NOT EXISTS SEASONS (
    ID_SEASON INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_SEASONS PRIMARY KEY (ID_SEASON),
    ID_SERIE INT NOT NULL,
    CONSTRAINT FK_SEASONS_TO_SERIES FOREIGN KEY (ID_SERIE) REFERENCES SERIES (ID_SERIE),
    NUMBER_OF_SEASON INT NULL
);

CREATE TABLE IF NOT EXISTS CHAPTERS (
    ID_CHAPTER INT AUTO_INCREMENT NOT NULL,
    CONSTRAINT PK_CHAPTERS PRIMARY KEY (ID_CHAPTER),
    ID_SEASON INT NOT NULL,
    CONSTRAINT FK_CHAPTERS_TO_SEASONS FOREIGN KEY (ID_SEASON) REFERENCES SEASONS (ID_SEASON),
    NAME TEXT NULL,
    BACKGROUND_URL TEXT NULL,
    DURATION TEXT NULL,
    DESCRIPTION TEXT NULL
);
